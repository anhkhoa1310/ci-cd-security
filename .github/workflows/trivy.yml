name: Trivy Scan

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y && sudo apt-get install -y trivy jq

      # 3Ô∏è‚É£ Run Trivy FileSystem Scan
      - name: Trivy FileSystem Scan
        run: |
          echo "Running Trivy file system scan..."
          trivy fs . --format json -o trivy-fs.json || echo "Trivy FS scan completed with issues"

      # 4Ô∏è‚É£ Build JAR with Maven
      - name: Build JAR with Maven
        run: |
          echo "Building project..."
          mvn package -DskipTests

      # 5Ô∏è‚É£ Build Docker image (if Dockerfile exists)
      - name: Build Docker image
        run: |
          if [ -f Dockerfile ]; then
            echo "Dockerfile found, building image..."
            docker build -t projectscgh:latest .
          else
            echo "‚ö†Ô∏è No Dockerfile found, skipping Docker build."
          fi

      # 6Ô∏è‚É£ Run Trivy Docker Image Scan (if Dockerfile exists)
      - name: Trivy Docker Image Scan
        run: |
          if [ -f Dockerfile ]; then
            echo "Running Trivy image scan..."
            trivy image projectscgh:latest --format json -o trivy-image.json || echo "Trivy image scan completed with issues"
          else
            echo "‚ö†Ô∏è No Dockerfile found, skipping image scan."
          fi

      # 7Ô∏è‚É£ Count vulnerabilities (won‚Äôt stop pipeline)
      - name: Check Trivy vulnerability count
        continue-on-error: true
        run: |
          echo "Counting vulnerabilities..."
          FS_COUNT=$(jq '[.Results[]? | select(.Vulnerabilities != null) | .Vulnerabilities[]?] | length' trivy-fs.json)
          IMG_COUNT=0
          if [ -f trivy-image.json ]; then
            IMG_COUNT=$(jq '[.Results[]? | select(.Vulnerabilities != null) | .Vulnerabilities[]?] | length' trivy-image.json)
          fi
          TOTAL=$(($FS_COUNT + $IMG_COUNT))
          echo "Trivy found $TOTAL vulnerabilities (FS: $FS_COUNT, Image: $IMG_COUNT)"
          echo "TOTAL_VULNS=$TOTAL" >> $GITHUB_ENV

      # 8Ô∏è‚É£ Generate Markdown Security Report using script
      - name: Generate Markdown Report (Trivy + Snyk + Sonar)
        if: always()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "üìÅ Current directory: $(pwd)"
          ls -R
          chmod +x scripts/generate-security-report.sh
          ./scripts/generate-security-report.sh

      # 9Ô∏è‚É£ Upload Markdown report (only if file exists)
      - name: Upload ci-cd-security.md
        if: ${{ always() && hashFiles('ci-cd-security.md') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ci-cd-security
          path: ci-cd-security.md

      # üîü Commit security report back to repository (optional)
      - name: Commit security report
        if: always()
        run: |
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/anhkhoa1310/ci-cd-security.git dest-repo
          cp ci-cd-security.md dest-repo/
          cd dest-repo
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add -f ci-cd-security.md
          git commit -m "Add latest security scan report" || echo "No changes to commit"
          git push origin main || echo "No changes pushed"
